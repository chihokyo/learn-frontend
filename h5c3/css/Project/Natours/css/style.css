@charset "UTF-8";
/* 一些常用的函数 */
/* 基础类 */
/* 基本会把充值放在*，其实有些老师不建议。说放在html或者:root这样 */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* 这里从为什么 border-box 变成了强制继承inherit
       因为首先box-sizing这个属性无法继承
       所以全局设置成了 可以继承 然后在body里设置 border-box 就达到了全局效果
       */
  box-sizing: inherit; }

html {
  /* ❓这里的百分比怎么算的呢？ */
  /* 其实这里打算所有的都统一成rem，为了让所有的子元素都便于计算
      所以打算给根元素font-size来一个10px
      但是这样写死了之后，就无法随着浏览器的大小改变了。浏览器默认的是16px
      所以这里使用的是 【10px / 浏览器默认大小(16px) = 62.5%】  */
  /* 这样就可以随着浏览器默认值的大小 随意改变网页大小了 */
  font-size: 62.5%; }

/* 这里经常放一些字体 因为字体基本上都有继承性。为什么不放在html？
    因为你会发现body下面才是内容 这样继承下来才更有意义。 */
body {
  box-sizing: border-box; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    /* 形成一种中间抖动的感觉 */
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0);
    /* 貌似是一样的 */
    transform: translate(none); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    /* 形成一种中间抖动的感觉 */
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0);
    /* 貌似是一样的 */
    /* transform: translate(none); */ } }

/* 给按钮一个从下向上浮动的效果 */
@keyframes moveInBottom {
  0% {
    opacity: 0;
    /* 先向下走 */
    transform: translateY(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  /* 相当于是16px*1.7 */
  line-height: 1.7;
  /* 三个数字越大 越浅 */
  color: #777;
  /* padding不会被继承 */
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* 抗震动 主要是动画的 这个很少见 */
  backface-visibility: hidden;
  /* 为了跟按钮保持距离 */
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    /* transform: translate(0); */
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-in;
    /* animation-iteration-count: 3; 会发生三次 */
    /* animation-delay: 3s; 这是一个延迟 */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #777);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  letter-spacing: 0.2rem;
  transition: all 0.2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-top-big {
  margin-top: 8rem; }

.u-margin-bottom-huge {
  margin-top: 10rem; }

/* 组件类的 */
.btn {
  /* 按钮的原始状态 & 按钮按完之后的状态 */
  /* 悬浮状态 */
  /* 按下去的时候 */
  /* 这里要做一个变大的小效果 需要用到伪元素 遮盖在前面 */ }
  .btn:link, .btn:visited {
    display: inline-block;
    position: relative;
    /* 这里是为了按钮的遮盖层1-2 */
    padding: 1.5rem 4rem;
    text-transform: uppercase;
    text-decoration: none;
    border-radius: 10rem;
    transition: all 0.2s; }
  .btn:hover {
    /* hover向上走一点 */
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      /* X轴放大1.4倍 Y轴放大1.6倍 */
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0; }
  .btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn--green {
    background-color: #55c57a;
    color: #fff; }
    .btn--green::after {
      background-color: #55c57a; }
  .btn::after {
    content: '';
    /* 设置块级 使得可以使用高度和宽度 */
    display: inline-block;
    /* 1-1 这个伪元素相当于就是btn的子元素了，所以这里的高度宽度相当于是btn */
    height: 100%;
    width: 100%;
    /* 1-2 但是走到这里还是不能覆盖 因为位置是不对的 所以需要重置位置 */
    position: absolute;
    top: 0;
    left: 0;
    /* 1-3 放在后面 */
    z-index: -1;
    border-radius: 100px;
    /* 这个transition过渡动画必须写在初始状态的时候才能似的all都生效 */
    transition: all 0.4s; }
  .btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    /* 这个属性难记忆的 规定对象动画时间之外的状态*/
    /* 在动画被延迟，开始之前适用于0%的状态 也就是消失的状态*/
    animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all 0.2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all 0.2s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #55c57a;
      transform: scale(1.05) translateY(-0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform 0.3s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: 0.5rem;
    display: inline-block;
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.card {
  /*=========反转功能============*/
  perspective: 150rem;
  position: relative;
  height: 52rem;
  /*=========样式============*/ }
  .card__side {
    color: #fff;
    height: 52rem;
    transition: all 0.8s ease;
    font-size: 2rem;
    top: 0;
    left: 0;
    width: 100%;
    position: absolute;
    backface-visibility: hidden;
    border-radius: 3px;
    overflow: hidden;
    /*这里图片会遮盖上面的圆角 所以做了处理*/
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
    .card__side--front {
      background-color: #fff; }
    .card__side--back {
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0deg); }
  .card__picture {
    background-size: cover;
    height: 25rem;
    background-blend-mode: screen;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-top-left-radius: 3px;
    border-top-right-radius: 3px; }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg); }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card__heading {
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%;
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: #fff; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    box-decoration-break: clone;
    -webkit-box-decoration-break: clone; }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 3rem;
    color: #777; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price-box {
    color: #fff;
    margin-bottom: 0rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }

/* 页面上共通的部分 比如header/footer */
.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: '';
    display: table;
    clear: both; }
  .row [class^='col-'] {
    float: left; }
    .row [class^='col-']:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc( 3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  /* 平铺并保持底部不变 */
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative; }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem;
    /* 不设置width 就是默认的auto */ }
  .header__text-box {
    /* 一个居中方案 */
    position: absolute;
    top: 40%;
    left: 50%;
    /* 截止到这里会发现有偏移，下面的变形可以相对于自身进行偏移 */
    transform: translate(-50%, -50%);
    /* 这里为了下面的按钮写的 */
    text-align: center; }

/* 具体页面 */
.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  transform: skewY(-7deg);
  margin-top: -10rem; }
  .section-features > * {
    transform: skewY(7deg); }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  margin-top: -10rem; }
